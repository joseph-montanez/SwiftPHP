[{"id":0,"href":"/SwiftPHP/guides/","title":"Guides","section":"Hello Swift","content":"This is the main landing page for the guides section.\n"},{"id":1,"href":"/SwiftPHP/guides/installation/","title":"Installtion Guide","section":"Guides","content":"Installation Guide# As of writing, this is designed for PHP 8.4 support.\nInstalling on macOS# macOS is straight forward but requires brew and xcode installed.\nxcode-select --install /bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\u0026#34; # Build PHP.xcframework to compile extensions against ./Scripts/build_xcframework.sh # Build PHP CLI to test your extension with ./Scripts/build_macos.shInstallation on Windows 11 x64/ARM64# As of this time, the current Windows SDK is broken and you need to follow the guide to install Swift on Windows successfully https://forums.swift.org/t/an-unofficial-guide-to-building-the-swift-toolchain-on-windows-x64-and-arm64/81751\nWindows 11 ARM64# PHP has no official support for Windows 11 on ARM, however progress is being made and you can use the guide below.\nDownload the experimental builds for PHP 8.4: https://github.com/hyh19962008/php-windows-arm64/releases/tag/8.4.10. Source code and Binary php-8.4.10-nts-Win32-vs17-arm64-experimental.7z Source code (zip) Copy php-src-php-8.4.10\\win32\\build\\config.w32.h.in to php-src-php-8.4.10\\php\\config.w32.h\nEdit Scripts\\win_ext.ps1 and change $env:PHP_SRC_ROOT=\u0026quot;D:/dev/php-src-php-8.4.10\u0026quot; to where the PHP source code was unzipped to.\n"},{"id":2,"href":"/SwiftPHP/guides/extension-basics/","title":"PHP Extension Basics","section":"Guides","content":"PHP Extension Basics# PHP has 4 configurations from source code to configuration. This means from the source code to the runtime, you have to compile your extension to match the following.\nZTS (Thread Safe) + Debug ZTS (Thread Safe) + Release NTS (Non-Thread Safe) + Debug NTS (Non-Thread Safe) + Release Do you need thread safety? PHP is ran a few different ways, if you are running this as a traditional web server setup, i.e Apache/Nginx and PHP-FPM then no you do not need thread safety. NTS (Non-thread safe) will run faster than ZTS since it wont have the thread context overhead. The times you\u0026rsquo;d want ZTS is when PHP is run inside, effectively embedded into the process and that process is multithreaded. Mod_PHP for Apache is a great example.\nIf you are using Swift\u0026rsquo;s concurrency you do not explicty need PHP\u0026rsquo;s thread-safe version, its only when PHP itself is accessing data between its instances across thread. So in Swift you can use threads, as long as you return to the main thread for the response back to PHP. If you are embedding PHP yourself, then it will be safer to assume you need thread safety.\n"}]